---
- name: Dev Config
  hosts: all
  become: true
  vars:
    open_mpi_version_major: 3
    open_mpi_version_minor: 1
    open_mpi_version_patch: 4
    open_mpi_install_directory: "/opt/openmpi-{{open_mpi_version_major}}.{{open_mpi_version_minor}}.{{open_mpi_version_patch}}"

    singularity_version_major: 3
    singularity_version_minor: 1
    singularity_version_patch: 0
    singularity_install_directory: /opt/singularity-{{singularity_version_major}}.{{singularity_version_minor}}.{{singularity_version_patch}}
  tasks:


    ### Install python and pip ###
    - name: Install python
      apt:
        name: 
          - python2.7
          - python3
          - python-pip
          - python3-pip
        state: present
        update_cache: true

    ### Install google-chrome ###
    - name: Check whether google-chrome is installed
      stat:
        path: "/usr/bin/google-chrome"
      register: stat_google_chrome

    - name: "Include install-google_chrome"
      include_role:
        name: install-google_chrome
      when: not stat_google_chrome.stat.exists

    ### Install VNC ###
    - name: Install VNC
      stat:
        path: "/usr/bin/vncserver"
      register: stat_vnc

    - name: "Include install-vnc"
      include_role:
        name: install-vnc
      when: not stat_vnc.stat.exists

    ### Install Jupyter ###
    - name: "Include jupyter"
      include_role:
        name: install-jupyter

    ### Install Open MPI ###
    - name: Check whether MPI is installed
      stat:
        path: "{{open_mpi_install_directory}}/bin/mpirun"
      register: stat_openmpi

    - name: "Include install-openmpi"
      include_role:
        name: install-openmpi
      vars:
        version_major: "{{open_mpi_version_major}}"
        version_minor: "{{open_mpi_version_minor}}"
        version_patch: "{{open_mpi_version_patch}}"
        install_directory: "{{open_mpi_install_directory}}"
      when: not stat_openmpi.stat.exists

    ### Install Neuron ###
    - name: Check whether Neuron is installed
      stat:
        path: /usr/local/bin/nrniv
      register: stat_neuron

    - name: "Include install-neuron"
      include_role:
        name: install-neuron
      when: not stat_neuron.stat.exists

    ### Install Singularity ###
    - name: Check whether Singularity is installed
      stat:
        path: "{{singularity_install_directory}}/bin/singularity"
      register: stat_singularity

    - name: "Include install-singulairty"
      include_role:
        name: install-singularity
      vars:
        version_major: "{{singularity_version_major}}"
        version_minor: "{{singularity_version_minor}}"
        version_patch: "{{singularity_version_patch}}"
        install_directory: "{{singularity_install_directory}}"
      when: not stat_singularity.stat.exists
